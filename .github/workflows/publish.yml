name: Test, Build and Push

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    python-validation:
        name: Python Reference Validation
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Python
              uses: actions/setup-python@v5
              with:
                  python-version: '3.11'

            - name: Install PostgreSQL and development packages
              run: |
                  sudo apt install -y postgresql-common
                  sudo /usr/share/postgresql-common/pgdg/apt.postgresql.org.sh
                  sudo apt-get update
                  sudo apt-get install -y --no-install-recommends \
                      build-essential \
                      postgresql-16 \
                      postgresql-server-dev-16

            - name: Install Clang compiler
              run: |
                  # Detect required clang version from PostgreSQL build configuration
                  REQUIRED_CLANG=$(pg_config --configure | grep -oP 'clang-\K[0-9]+' | head -1)

                  if [ -z "$REQUIRED_CLANG" ]; then
                      # Check PostgreSQL's Makefile.global for clang version
                      if [ -f "/usr/lib/postgresql/16/lib/pgxs/src/Makefile.global" ]; then
                          REQUIRED_CLANG=$(grep -oP '/usr/bin/clang-\K[0-9]+' /usr/lib/postgresql/16/lib/pgxs/src/Makefile.global | head -1)
                      fi
                  fi

                  if [ -z "$REQUIRED_CLANG" ]; then
                      echo "Could not detect required clang version, installing default clang..."
                      sudo apt-get install -y --no-install-recommends clang llvm
                  else
                      echo "Installing clang-$REQUIRED_CLANG and llvm-$REQUIRED_CLANG..."
                      sudo apt-get install -y --no-install-recommends \
                          clang-$REQUIRED_CLANG \
                          llvm-$REQUIRED_CLANG
                      sudo ln -sf /usr/bin/clang-$REQUIRED_CLANG /usr/bin/clang
                      sudo ln -sf /usr/bin/clang++-$REQUIRED_CLANG /usr/bin/clang++
                  fi

            - name: Build and install extension
              run: |
                  make clean
                  make USE_PGXS=1
                  sudo make USE_PGXS=1 install

            - name: Install Python dependencies
              run: |
                  pip install -r requirements.txt

            - name: Start PostgreSQL and create test database
              run: |
                  # Start PostgreSQL service
                  sudo systemctl start postgresql

                  # Create test database and user
                  sudo -u postgres createdb test_db
                  sudo -u postgres psql -c "ALTER USER postgres PASSWORD 'postgres';"

                  # Verify PostgreSQL is running
                  sudo -u postgres psql -c "SELECT version();"

            - name: Create extension in test database
              env:
                  PGHOST: localhost
                  PGPORT: 5432
                  PGUSER: postgres
                  PGPASSWORD: postgres
                  PGDATABASE: test_db
              run: |
                  psql -c "CREATE EXTENSION weighted_statistics;"

            - name: Run Python validation tests
              env:
                  PGHOST: localhost
                  PGPORT: 5432
                  PGUSER: postgres
                  PGPASSWORD: postgres
                  PGDATABASE: test_db
              run: |
                  cd reference
                  python validate_against_reference.py \
                    --host localhost \
                    --port 5432 \
                    --database test_db \
                    --user postgres \
                    --password postgres

            - name: Run regression tests
              env:
                  TEST_DATABASE: test_db
                  TEST_USER: postgres
                  TEST_HOST: localhost
                  TEST_PORT: 5432
                  PGPASSWORD: postgres
              run: |
                  ./test/run_tests.sh

            - name: Upload test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: regression-test-results
                  path: test/results/

    docker-build-push:
        name: Build and Push Docker Image
        runs-on: ubuntu-latest
        needs: [python-validation]
        if: github.event_name != 'pull_request'

        permissions:
            contents: read
            packages: write

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push Docker image
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: |
                      ${{ steps.meta.outputs.labels }}
                      org.opencontainers.image.title=PostgreSQL Weighted Statistics Extension
                      org.opencontainers.image.description=High-performance weighted statistics functions for PostgreSQL
                      org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
                      org.opencontainers.image.licenses=MIT
